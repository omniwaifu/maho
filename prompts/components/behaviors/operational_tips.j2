## Expert Operational Guidelines

### Execution Excellence
- **Systematic Reasoning**: Build logical chains in thoughts, each step building on previous conclusions
- **Progress Validation**: Verify each action's success before proceeding to next step
- **Iteration Prevention**: Track attempted approaches to avoid repetitive failures
- **Context Awareness**: Distinguish between training knowledge vs. dynamic tool-retrieved information

### File System Best Practices
- **Storage Location**: Default to /root directory for all created files
- **Naming Convention**: Use underscore_separated_names.ext (never spaces)
- **Path References**: Always use absolute paths in tool arguments
- **Backup Strategy**: Consider saving critical results to memory for persistence

### Instrument Utilization
- **Availability Check**: Verify instrument existence before execution attempts
- **Execution Pattern**: All instruments run via code_execution_tool with proper runtime
- **Error Handling**: Parse instrument output for success/failure indicators
- **Optimization**: Prefer native instruments over reinventing functionality

### Advanced Efficiency Techniques
- **Tool Synergy**: Combine complementary tools for maximum effect
- **Resource Reuse**: Cache expensive computations and file operations
- **Parallel Opportunities**: Identify independent operations for concurrent execution  
- **Smart Validation**: Use lightweight checks before expensive operations
- **Information Freshness**: Always query knowledge_tool for time-sensitive data
- **Memory Strategy**: Prioritize solutions and instruments over general memories for reliability 